{
  "formatVersion": 1,
  "database": {
    "version": 4,
    "identityHash": "2efde18bf692d84840d9df9094a67190",
    "entities": [
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `isNetworkAdmin` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isNetworkAdmin",
            "columnName": "isNetworkAdmin",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "profiles",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `userId` TEXT, `firstName` TEXT, `lastName` TEXT, `profileImage` TEXT, `gender` TEXT, `guild` TEXT, `summary` TEXT, `skills` TEXT, `values` TEXT, `passions` TEXT, `languages` TEXT, `createdAt` INTEGER, `primaryEmail` TEXT, `secondaryEmail` TEXT, `primaryPhone` TEXT, `secondaryPhone` TEXT, `website` TEXT, `facebook` TEXT, `twitter` TEXT, `instagram` TEXT, `linkedIn` TEXT, `medium` TEXT, `github` TEXT, `foursquare` TEXT, `pinterest` TEXT, `behance` TEXT, `dribble` TEXT, `youtube` TEXT, `myspace` TEXT, `tumblr` TEXT, `flickr` TEXT, `wikipedia` TEXT, `soundcloud` TEXT, `spotify` TEXT, `appleMusic` TEXT, `wechat` TEXT, `signal` TEXT, `snapchat` TEXT, `skype` TEXT, `zoom` TEXT, `slack` TEXT, `telegram` TEXT, `whatsapp` TEXT, `experiences` TEXT, `investments` TEXT, `educationRecords` TEXT, `rawAvatarURL` TEXT, `_wallpaperURL` TEXT, `primary_city_id` TEXT, `primary_city_name` TEXT, `primary_city_countryName` TEXT, `secondary_city_id` TEXT, `secondary_city_name` TEXT, `secondary_city_countryName` TEXT, `home_city_id` TEXT, `home_city_name` TEXT, `home_city_countryName` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`userId`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profileImage",
            "columnName": "profileImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "guild",
            "columnName": "guild",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "summary",
            "columnName": "summary",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "skills",
            "columnName": "skills",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "values",
            "columnName": "values",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "passions",
            "columnName": "passions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "languages",
            "columnName": "languages",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "primaryEmail",
            "columnName": "primaryEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "secondaryEmail",
            "columnName": "secondaryEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "primaryPhone",
            "columnName": "primaryPhone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "secondaryPhone",
            "columnName": "secondaryPhone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "facebook",
            "columnName": "facebook",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "twitter",
            "columnName": "twitter",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "instagram",
            "columnName": "instagram",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "linkedIn",
            "columnName": "linkedIn",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "medium",
            "columnName": "medium",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "github",
            "columnName": "github",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "foursquare",
            "columnName": "foursquare",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pinterest",
            "columnName": "pinterest",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "behance",
            "columnName": "behance",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dribble",
            "columnName": "dribble",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "youtube",
            "columnName": "youtube",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "myspace",
            "columnName": "myspace",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tumblr",
            "columnName": "tumblr",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "flickr",
            "columnName": "flickr",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "wikipedia",
            "columnName": "wikipedia",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "soundcloud",
            "columnName": "soundcloud",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "spotify",
            "columnName": "spotify",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "appleMusic",
            "columnName": "appleMusic",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "wechat",
            "columnName": "wechat",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "signal",
            "columnName": "signal",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "snapchat",
            "columnName": "snapchat",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "skype",
            "columnName": "skype",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "zoom",
            "columnName": "zoom",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "slack",
            "columnName": "slack",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "telegram",
            "columnName": "telegram",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "whatsapp",
            "columnName": "whatsapp",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "experiences",
            "columnName": "experiences",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "investments",
            "columnName": "investments",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "educationRecords",
            "columnName": "educationRecords",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "rawAvatarURL",
            "columnName": "rawAvatarURL",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "_wallpaperURL",
            "columnName": "_wallpaperURL",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "primaryCity.id",
            "columnName": "primary_city_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "primaryCity.name",
            "columnName": "primary_city_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "primaryCity.countryName",
            "columnName": "primary_city_countryName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "secondaryCity.id",
            "columnName": "secondary_city_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "secondaryCity.name",
            "columnName": "secondary_city_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "secondaryCity.countryName",
            "columnName": "secondary_city_countryName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hometownCity.id",
            "columnName": "home_city_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hometownCity.name",
            "columnName": "home_city_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hometownCity.countryName",
            "columnName": "home_city_countryName",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_profiles_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_profiles_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "networks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `displayName` TEXT NOT NULL, `logo` TEXT, `backgroundImageUrl` TEXT, `lightModeBackgroundImageUrl` TEXT, `isPublic` INTEGER NOT NULL, `locationShareType` TEXT, `disabledApps` TEXT, `inviteMode` TEXT NOT NULL, `unreadCount` INTEGER NOT NULL, `isSelected` INTEGER NOT NULL, `alerts` TEXT NOT NULL, `permissions_invite` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "logo",
            "columnName": "logo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "backgroundImageUrl",
            "columnName": "backgroundImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lightModeBackgroundImageUrl",
            "columnName": "lightModeBackgroundImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isPublic",
            "columnName": "isPublic",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "locationShareType",
            "columnName": "locationShareType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "disabledApps",
            "columnName": "disabledApps",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "inviteMode",
            "columnName": "inviteMode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "unreadCount",
            "columnName": "unreadCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSelected",
            "columnName": "isSelected",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "alerts",
            "columnName": "alerts",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permissions.invite",
            "columnName": "permissions_invite",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "messages",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `authorId` TEXT, `parentMessageId` TEXT, `parentMessageAuthorId` TEXT, `requestId` TEXT, `channelId` TEXT NOT NULL, `type` TEXT NOT NULL, `mentionType` TEXT NOT NULL, `message` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `status` TEXT NOT NULL, `deliveryStatus` TEXT NOT NULL, `data` TEXT, `isMuted` INTEGER NOT NULL, `fileUrl` TEXT, `fileName` TEXT, `fileThumbnails` TEXT, `fileMimeType` TEXT, `reactions` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`channelId`) REFERENCES `channels`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`authorId`) REFERENCES `members`(`id`) ON UPDATE NO ACTION ON DELETE RESTRICT , FOREIGN KEY(`parentMessageId`) REFERENCES `messages`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`parentMessageAuthorId`) REFERENCES `members`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "parentMessageId",
            "columnName": "parentMessageId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "parentMessageAuthorId",
            "columnName": "parentMessageAuthorId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "requestId",
            "columnName": "requestId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "channelId",
            "columnName": "channelId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mentionType",
            "columnName": "mentionType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "deliveryStatus",
            "columnName": "deliveryStatus",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "data",
            "columnName": "data",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isMuted",
            "columnName": "isMuted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fileUrl",
            "columnName": "fileUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fileName",
            "columnName": "fileName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fileThumbnails",
            "columnName": "fileThumbnails",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fileMimeType",
            "columnName": "fileMimeType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reactions",
            "columnName": "reactions",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_messages_channelId",
            "unique": false,
            "columnNames": [
              "channelId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_channelId` ON `${TABLE_NAME}` (`channelId`)"
          },
          {
            "name": "index_messages_authorId",
            "unique": false,
            "columnNames": [
              "authorId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_authorId` ON `${TABLE_NAME}` (`authorId`)"
          },
          {
            "name": "index_messages_parentMessageId",
            "unique": false,
            "columnNames": [
              "parentMessageId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_parentMessageId` ON `${TABLE_NAME}` (`parentMessageId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "channels",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "channelId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "members",
            "onDelete": "RESTRICT",
            "onUpdate": "NO ACTION",
            "columns": [
              "authorId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "messages",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "parentMessageId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "members",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "parentMessageAuthorId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "members",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT, `profileJson` TEXT, `profileImage` TEXT, `friendDiscoveryKey` TEXT, `friendName` TEXT, `metadata` TEXT, `status` TEXT NOT NULL, `lastSeenAt` INTEGER NOT NULL, `isActive` INTEGER NOT NULL, `isBlockingMe` INTEGER NOT NULL, `isBlockedByMe` INTEGER NOT NULL, `isMuted` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profileJson",
            "columnName": "profileJson",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profileImage",
            "columnName": "profileImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "friendDiscoveryKey",
            "columnName": "friendDiscoveryKey",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "friendName",
            "columnName": "friendName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "metadata",
            "columnName": "metadata",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastSeenAt",
            "columnName": "lastSeenAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isBlockingMe",
            "columnName": "isBlockingMe",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isBlockedByMe",
            "columnName": "isBlockedByMe",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isMuted",
            "columnName": "isMuted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "channels",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `lastMessageId` TEXT, `authorId` TEXT, `memberCount` INTEGER NOT NULL, `image` TEXT, `createdAt` INTEGER NOT NULL, `lastMessageTime` INTEGER NOT NULL, `isTemporary` INTEGER NOT NULL, `unreadMentionCount` INTEGER NOT NULL, `unreadMessageCount` INTEGER NOT NULL, `messageLifeSeconds` INTEGER NOT NULL, `alerts` TEXT NOT NULL, `accessCode` TEXT, `networkId` TEXT, `category` TEXT, `isSuper` INTEGER NOT NULL, `isPublic` INTEGER NOT NULL, `isDiscoverable` INTEGER NOT NULL, `isVideoEnabled` INTEGER NOT NULL, `type` TEXT NOT NULL, `isAdminOnly` INTEGER NOT NULL, `telegramChatId` TEXT, `discordChatId` TEXT, `accessType` TEXT NOT NULL, `isDirectChannel` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`networkId`) REFERENCES `networks`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`authorId`) REFERENCES `members`(`id`) ON UPDATE NO ACTION ON DELETE RESTRICT )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastMessageId",
            "columnName": "lastMessageId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "memberCount",
            "columnName": "memberCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastMessageTime",
            "columnName": "lastMessageTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isTemporary",
            "columnName": "isTemporary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unreadMentionCount",
            "columnName": "unreadMentionCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unreadMessageCount",
            "columnName": "unreadMessageCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageLifeSeconds",
            "columnName": "messageLifeSeconds",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "alerts",
            "columnName": "alerts",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accessCode",
            "columnName": "accessCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "networkId",
            "columnName": "networkId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSuper",
            "columnName": "isSuper",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPublic",
            "columnName": "isPublic",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDiscoverable",
            "columnName": "isDiscoverable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isVideoEnabled",
            "columnName": "isVideoEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isAdminOnly",
            "columnName": "isAdminOnly",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "telegramChatId",
            "columnName": "telegramChatId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discordChatId",
            "columnName": "discordChatId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "accessType",
            "columnName": "accessType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isDirectChannel",
            "columnName": "isDirectChannel",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_channels_networkId",
            "unique": false,
            "columnNames": [
              "networkId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channels_networkId` ON `${TABLE_NAME}` (`networkId`)"
          },
          {
            "name": "index_channels_authorId",
            "unique": false,
            "columnNames": [
              "authorId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channels_authorId` ON `${TABLE_NAME}` (`authorId`)"
          },
          {
            "name": "index_channels_name",
            "unique": false,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channels_name` ON `${TABLE_NAME}` (`name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "networks",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "networkId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "members",
            "onDelete": "RESTRICT",
            "onUpdate": "NO ACTION",
            "columns": [
              "authorId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "network_members_relation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`networkId` TEXT NOT NULL, `memberId` TEXT NOT NULL, PRIMARY KEY(`networkId`, `memberId`), FOREIGN KEY(`networkId`) REFERENCES `networks`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`memberId`) REFERENCES `members`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "networkId",
            "columnName": "networkId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "memberId",
            "columnName": "memberId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "networkId",
            "memberId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_network_members_relation_networkId",
            "unique": false,
            "columnNames": [
              "networkId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_network_members_relation_networkId` ON `${TABLE_NAME}` (`networkId`)"
          },
          {
            "name": "index_network_members_relation_memberId",
            "unique": false,
            "columnNames": [
              "memberId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_network_members_relation_memberId` ON `${TABLE_NAME}` (`memberId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "networks",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "networkId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "members",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "memberId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "message_mentions_relation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageId` TEXT NOT NULL, `memberId` TEXT NOT NULL, PRIMARY KEY(`messageId`, `memberId`), FOREIGN KEY(`messageId`) REFERENCES `messages`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`memberId`) REFERENCES `members`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "memberId",
            "columnName": "memberId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "messageId",
            "memberId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_message_mentions_relation_messageId",
            "unique": false,
            "columnNames": [
              "messageId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_message_mentions_relation_messageId` ON `${TABLE_NAME}` (`messageId`)"
          },
          {
            "name": "index_message_mentions_relation_memberId",
            "unique": false,
            "columnNames": [
              "memberId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_message_mentions_relation_memberId` ON `${TABLE_NAME}` (`memberId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "messages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "messageId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "members",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "memberId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "channel_members_relation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`channelId` TEXT NOT NULL, `memberId` TEXT NOT NULL, PRIMARY KEY(`channelId`, `memberId`), FOREIGN KEY(`channelId`) REFERENCES `channels`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`memberId`) REFERENCES `members`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "channelId",
            "columnName": "channelId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "memberId",
            "columnName": "memberId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "channelId",
            "memberId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_channel_members_relation_channelId",
            "unique": false,
            "columnNames": [
              "channelId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channel_members_relation_channelId` ON `${TABLE_NAME}` (`channelId`)"
          },
          {
            "name": "index_channel_members_relation_memberId",
            "unique": false,
            "columnNames": [
              "memberId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channel_members_relation_memberId` ON `${TABLE_NAME}` (`memberId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "channels",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "channelId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "members",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "memberId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "channel_operators_relation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`channelId` TEXT NOT NULL, `memberId` TEXT NOT NULL, PRIMARY KEY(`channelId`, `memberId`), FOREIGN KEY(`channelId`) REFERENCES `channels`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`memberId`) REFERENCES `members`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "channelId",
            "columnName": "channelId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "memberId",
            "columnName": "memberId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "channelId",
            "memberId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_channel_operators_relation_channelId",
            "unique": false,
            "columnNames": [
              "channelId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channel_operators_relation_channelId` ON `${TABLE_NAME}` (`channelId`)"
          },
          {
            "name": "index_channel_operators_relation_memberId",
            "unique": false,
            "columnNames": [
              "memberId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channel_operators_relation_memberId` ON `${TABLE_NAME}` (`memberId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "channels",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "channelId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "members",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "memberId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [
      {
        "viewName": "MessageWithRefs",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT * FROM messages"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '2efde18bf692d84840d9df9094a67190')"
    ]
  }
}